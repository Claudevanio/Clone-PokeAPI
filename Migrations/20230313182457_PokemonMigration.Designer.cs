// <auto-generated />
using Clone_PokeAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Clone_PokeAPI.Migrations
{
    [DbContext(typeof(PokemonDBContext))]
    [Migration("20230313182457_PokemonMigration")]
    partial class PokemonMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Clone_PokeAPI.Models.DreamWorld", b =>
                {
                    b.Property<string>("FrontDefault")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("DreamWorld");
                });

            modelBuilder.Entity("Clone_PokeAPI.Models.PokemonInfoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("URLDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pokemons");
                });

            modelBuilder.Entity("Clone_PokeAPI.Models.PokemonInfoModel", b =>
                {
                    b.OwnsOne("Clone_PokeAPI.Models.SpritesModel", "Sprites", b1 =>
                        {
                            b1.Property<int>("PokemonInfoModelId")
                                .HasColumnType("int");

                            b1.Property<string>("FrontDefault")
                                .IsRequired()
                                .HasColumnType("nvarchar(400)");

                            b1.HasKey("PokemonInfoModelId");

                            b1.ToTable("Pokemons");

                            b1.WithOwner()
                                .HasForeignKey("PokemonInfoModelId");

                            b1.OwnsOne("Clone_PokeAPI.Models.OtherModel", "Other", b2 =>
                                {
                                    b2.Property<int>("SpritesModelPokemonInfoModelId")
                                        .HasColumnType("int");

                                    b2.Property<string>("OtherFrontDefault")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(400)");

                                    b2.HasKey("SpritesModelPokemonInfoModelId");

                                    b2.ToTable("Pokemons");

                                    b2.WithOwner()
                                        .HasForeignKey("SpritesModelPokemonInfoModelId");
                                });

                            b1.Navigation("Other")
                                .IsRequired();
                        });

                    b.OwnsOne("System.Collections.Generic.List<Clone_PokeAPI.Models.StatsModel>", "Stat", b1 =>
                        {
                            b1.Property<int>("PokemonInfoModelId")
                                .HasColumnType("int");

                            b1.Property<string>("BaseValue")
                                .IsRequired()
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("StatValue");

                            b1.Property<int>("Capacity")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("StatName");

                            b1.Property<string>("URL")
                                .HasColumnType("nvarchar(350)")
                                .HasColumnName("StatURL");

                            b1.HasKey("PokemonInfoModelId");

                            b1.ToTable("Pokemons");

                            b1.WithOwner()
                                .HasForeignKey("PokemonInfoModelId");
                        });

                    b.OwnsOne("System.Collections.Generic.List<Clone_PokeAPI.Models.TypeModel>", "Type", b1 =>
                        {
                            b1.Property<int>("PokemonInfoModelId")
                                .HasColumnType("int");

                            b1.Property<int>("Capacity")
                                .HasColumnType("int");

                            b1.Property<string>("TypeName")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("TypeName");

                            b1.Property<string>("URL")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("TypeURL");

                            b1.HasKey("PokemonInfoModelId");

                            b1.ToTable("TypesPokemon", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PokemonInfoModelId");
                        });

                    b.Navigation("Sprites")
                        .IsRequired();

                    b.Navigation("Stat")
                        .IsRequired();

                    b.Navigation("Type")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
